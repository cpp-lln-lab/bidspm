---
name: docker

on:
    push:
        branches: [main]
        tags: ['*']
    pull_request:
        branches: ['*']
    release:
        types: [published]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read

env:
    USER_NAME: cpplab
    REPO_NAME: bidspm
  # DATA:  /home/runner/work/giga_connectome/giga_connectome/giga_connectome/data/test_data
    IMAGE: /home/runner/work/bidspm/docker
    IS_TAGGED: ${{ github.ref_type == 'tag' }}
    IS_MAIN: ${{ github.ref == 'refs/heads/main' }}

jobs:
    docker-build:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
            with:
                submodules: recursive
                fetch-depth: 0

        -   name: Build the Docker image
            run: |
                docker build . --file Dockerfile --tag ${{env.USER_NAME}}/${{env.REPO_NAME}}
                mkdir -p ${{ env.IMAGE }}
                docker save "${{env.USER_NAME}}/${{env.REPO_NAME}}" > "${{ env.IMAGE }}/image.tar"
                docker images

        -   name: Upload docker artifacts
            uses: actions/upload-artifact@v4
            with:
                name: docker
                path: ${{ env.IMAGE }}

    docker-run:
        runs-on: ubuntu-latest
        needs: [docker-build]
        steps:
        -   name: Restore docker image
            uses: actions/download-artifact@v4
            with:
                name: docker
                path: ${{ env.IMAGE }}

        -   name: Test the Docker image
            run: |
                docker load -i ${{ env.IMAGE }}/image.tar
                docker run --rm \
                  ${{env.USER_NAME}}/${{env.REPO_NAME}} \
                  --help
                docker run --rm \
                  ${{env.USER_NAME}}/${{env.REPO_NAME}} \
                  --version

    docker-push:
        runs-on: ubuntu-latest
        needs: [docker-run]
        steps:
        -   name: Log in to Docker Hub
            uses: docker/login-action@v3.2.0
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

        -   name: Restore docker image
            uses: actions/download-artifact@v4
            with:
                name: docker
                path: ${{ env.IMAGE }}

        -   name: Load image
            run: docker load -i ${{ env.IMAGE }}/image.tar

        -   name: Push unstable to dockerhub on tags or on main
            if: ${{ env.IS_MAIN == 'true' || env.IS_TAGGED == 'true' }}
            run: |
                echo "Pushing unstable versions to DockerHub"
                unstable="${{env.USER_NAME}}/${{env.REPO_NAME}}:unstable"
                docker tag "${{env.USER_NAME}}/${{env.REPO_NAME}}" "${unstable}"
                docker push "${unstable}"

        -   name: Push stable release to dockerhub on tags only
            if: ${{ env.IS_TAGGED == 'true' }}
            run: |
                echo "Pushing stable and latest versions to DockerHub for latest and  ${{ github.ref_name }}"

                unstable="${{env.USER_NAME}}/${{env.REPO_NAME}}:unstable"
                latest="${{env.USER_NAME}}/${{env.REPO_NAME}}:latest"
                docker tag "${unstable}" "${latest}"
                docker push "${latest}"

                tagged_release="${{env.USER_NAME}}/${{env.REPO_NAME}}:${{ github.ref_name }}"
                docker tag "${unstable}" "${tagged_release}"
                docker push "${tagged_release}"
